#X-Generator: crowdin.com
bc.start=in\u00edcio
bg.repeat_control=repita entre
bg.repeat_control.description=Repita os comandos com o valor da "vari\u00e1vel" variando entre "in\u00edcio" e "parar". "vari\u00e1vel" muda em "incremento" entre cada repeti\u00e7\u00e3o
bc.end=Parar
bg.constrain=confina
bc.low=menor
bc.high=maior
bg.sd_write2=gravar no SD
bg.sd_write=escreve no SD
bg.sd_write_number=escreve um n\u00famero no SD
bg.sd_write_number_int=escreve n\u00famero inteiro no SD
bg.sd_return=Retorno
bg.sd_no_return=n\u00e3o retorna
bd.storage=Armazenamento
bc.device_address=Endere\u00e7o de dispositivo
bc.register_address=Endere\u00e7o do registrador
bc.watchdog_enable=Habilitar
bc.eeprom_address=endere\u00e7o
bc.eeprom_data=dados
bc.ln=nova linha
bc.message=mensagem2
bc.print=imprima
bc.line_number=linha\#
bc.character_number=char\#


bg.variable_poly=nome da vari\u00e1vel char
bg.setter_variable_char=atribui vari\u00e1vel char
bg.char=A
bd.chars=char
bg.not_equal_poly=\!\=
bg.glue_poly=junte
bg.serial_read_poly=l\u00ea serial
bc.setup=setup
bc.loop=loop
bg.setup=setup
bc.par=entrada
bc.vecsize=tamanho
bc.num=\#
bg.variable_fake=falsa
bg.fake=falso
bg.variable_vector=nome da vari\u00e1vel vetor
bc.position=posi\u00e7\u00e3o
bg.create_variable_vector=criar um vetor

bg.code_head=head
bg.code_setup=setup
bg.code_loop=loop
bg.serial_read=l\u00ea serial
bd.especial=C\u00f3digos
bg.not_equal_digital=\!\=
bc.var=nome da vari\u00e1vel de itera\u00e7\u00e3o
bg.glue_msg=junte mensagem

# BlockDrawer name
bc.angle=\u00e2ngulo
bc.base=base
bc.condition=teste
bc.else=sen\u00e3o
bc.exponent=expoente
bc.from=de
bc.level=n\u00edvel
bc.max=m\u00e1x
bc.min=min
bc.microseconds=microsegundos
bc.milliseconds=milisegundos

# BlockConnector label
bc.pin_number=pino\#
bc.status=estatus
bc.test=teste
bc.then=ent\u00e3o
bc.to=para
bc.value=valor
bc.variable=vari\u00e1vel
bc.frequency=frequ\u00eancia
bc.do=fa\u00e7a
bc.motor_channel=canal do motor
bc.motor_speed=velocidade do motor


bd.control=controle
bd.number=Vari\u00e1veis/Constantes
bd.operators=Operadores matem\u00e1ticos
bd.pins=pinos

bd.communication=Comunica\u00e7\u00e3o

#linksprite

# BlockGenus initlabel
bg.abs=abs
bg.addition=+
bg.and=e
bg.cos=cos





bg.digital-high=HIGH
bg.digital-low=LOW
bg.digital-off=DESLIGADO
bg.digital-on=LIGADO
bg.division=/
bg.false=FALSO
bg.glue_sb=junte
bg.glue_sn=junte
bg.greater=>
bg.greater_equal=>\=
bg.if=se
bg.ifelse=se/sen\u00e3o
bg.less=<
bg.less_equal=<\=
bg.loop=sempre
bg.subroutine=subrotina
bg.subroutine-ref=subrotina
bg.map=mapeie
bg.max=m\u00e1x
bg.message=mensagem
bg.min=m\u00edn
bg.modulo=%
bg.multiplication=x
bg.not=n\u00e3o
bg.not_equal=\!\=
bg.number=1
bg.number_long=1000000
bg.number_double=3.1415927
bg.number-single=1
bg.number-single-I2C-address=3F
bg.or=ou
bg.pin-read-analog=pino anal\u00f3gico
bg.pin-read-digital=pino digital
bg.pin-read-digital-pullup=entrada pullup
bg.pin-write-analog=seta pino anal\u00f3gico
bg.pin-write-digital=seta pino digital
bg.pow=pot\u00eancia
bg.random=sorteie
bg.repeat_times=repita
bg.watchdog_15ms=WDTO_15MS
bg.watchdog_30ms=WDTO_30MS
bg.watchdog_60ms=WDTO_60MS
bg.watchdog_120ms=WDTO_120MS
bg.watchdog_250ms=WDTO_250MS
bg.watchdog_500ms=WDTO_500MS
bg.watchdog_1s=WDTO_1S
bg.watchdog_2s=WDTO_2S
bg.watchdog_4s=WDTO_4S
bg.watchdog_8s=WDTO_8S
bg.watchdog_setup=Watchdog
bg.watchdog_reset=Reinicia pelo Watchdog
bg.random_range=rand\u00f4mico


#linksprite

bg.serial_println=imprime nova linha
bg.serial_print=imprime
bg.servo=Servo
bg.servo_prefix=Servo\:
bg.servo_default=Padr\u00e3o
bg.servo_sg90=SG90
bg.servo_mg996r=MG996R
bg.setter_variable_digital=atribui vari\u00e1vel digital
bg.sin=sen
bg.sqrt=raiz quadrada
bg.subtraction=-
bg.tan=tan
bg.true=VERDADEIRO

bg.ultrasonic=ultras\u00f4nico
bg.LCD_command_lightOn=Luz Acesa
bg.LCD_command_lightOff=Luz Apagada
bg.variable_digital=vari\u00e1vel digital
bg.while=enquanto
bg.wire_isread=ler I2C?
bg.wire_read=ler do I2C
bg.wire_write=gravar para o I2C
bg.wire_write_one_byte=escrita I2C 1
bg.tone=Som
bg.tone_time=Som
bg.no_tone=sem som
bg.xcj_motor_backward=shield motor para tr\u00e1s
bg.xcj_motor_forward=shield motor para frente
bg.xcj_ms_digital_read=L\u00ea pino digital Xinchejian
bg.xcj_ms_digital_write=Escreve pino digital Xinchejian




ardublock.file.suffix=Arquivo do Programa ArduBlock (*.abp)
ardublock.ui.new=Novo
ardublock.ui.save=Salvar
ardublock.ui.saveAs=Salvar como
ardublock.ui.load=Abrir
ardublock.ui.upload=Enviar para o Arduino
ardublock.ui.clone=Duplicar
ardublock.ui.add_comment=Adicionar coment\u00e1rio
ardublock.ui.delete_comment=Excluir Coment\u00e1rio
ardublock.ui.organize_blocks=Organizar todos os blocos
ardublock.ui.create_refer=criar refer\u00eancia
ardublock.ui.website=Ir para o Web Site
ardublock.ui.serialMonitor=Monitor Serial
ardublock.ui.saveImage=Salvar como imagem...


ardublock.translator.exception.noLoopFound=Nenhum loop encontrado\!
ardublock.translator.exception.multipleLoopFound=Mais de um loop encontrado\!
ardublock.translator.exception.subroutineNotDeclared=Subrotina n\u00e3o foi criada\!

message.title.error=Erro
message.title.question=Pergunta
message.content.open_unsaved=O programa ardublock foi alterado, voc\u00ea deseja salvar?
message.content.overwrite=Deseja sobrescrever o arquivo existente?
message.file_not_found=Arquivo n\u00e3o encontrado ou Permiss\u00e3o negada
message.question.newfile_on_workspace_changed=O programa foi alterada, voc\u00ea deseja criar um novo arquivo Ardublock?

bc.repeat_times=vezes

# Descriptions of all Block

bg.loop.description=Programa principal com Loop e sem Setup


bg.subroutine.description=Adiciona uma subrotina
bg.subroutine-ref.description=Usa a subrotina
bg.pin-read-analog.description=L\u00ea o valor do pino anal\u00f3gico
bg.pin-read-digital.description=L\u00ea o valor do pino digital
bg.pin-read-digital-pullup.description=Atribui o pino digital com pullup interno
bg.pin-write-digital.description=Atribui ao pino digital
bg.pin-write-analog.description=Atribui pulso- PWM ao pino digital
bg.addition.description=Soma de dois n\u00fameros
bg.subtraction.description=Subtra\u00e7\u00e3o de dois n\u00fameros
bg.multiplication.description=Produto de dois n\u00fameros
bg.division.description=Divis\u00e3o de dois n\u00fameros
bg.random.description=Gera um n\u00famero aleat\u00f3rio
bg.map_common.description=Mapeia um n\u00famero entre [0,1023] para [0,255]
bg.map.description=Mapeia um n\u00famero de uma faixa em outra faixa
bg.constrain.description=Confina um n\u00famero entre dois valores
bg.greater.description=Verdade se o primeiro n\u00famero \u00e9 maior que o segundo
bg.less.description=Verdade se o primeiro n\u00famero \u00e9 menor que o segundo
bg.equal.description=Verdadeiro se o primeiro n\u00famero \u00e9 igual ao segundo
bg.equal_digital.description=Verdadeiro se o primeiro n\u00famero \u00e9 igual ao segundo
bg.greater_equal.description=Verdade se o primeiro n\u00famero for igual ou maior que o segundo n\u00famero
bg.less_equal.description=Verdade se o primeiro n\u00famero for menor ou igual ao segundo n\u00famero
bg.not_equal.description=Verdade se o primeiro n\u00famero for diferente do segundo
bg.not_equal_digital.description=Verdade se o primeiro valor for diferente do segundo
bg.and.description=Verdade se as duas condi\u00e7\u00f5es forem verdade
bg.or.description=Verdade se uma das duas condi\u00e7\u00f5es forem verdade
bg.not.description=O oposto de
bg.equal_poly.description=Verdade se o primeiro caractere \u00e9 igual ao segundo
bg.not_equal_poly.description=Verdade se o primeiro caractere \u00e9 diferente do segundo
bg.true.description=Verdade
bg.false.description=Falso
bg.digital-high.description=Pino LIGADO
bg.digital-low.description=Pino DESLIGADO
bg.variable_digital.description=Vari\u00e1vel digital
bg.setter_variable_digital.description=Atribui a vari\u00e1vel digital
bg.servo.description=Controla servo
bg.ultrasonic.description=Sensor de dist\u00e2ncia ultrasonico
bg.tone.description=Gera um som com a frequ\u00eancia especificada em um pino.
bg.tone_time.description=Gera um som com a frequ\u00eancia especificada em um pino, durante um dado tempo.
bg.no_tone.description=Para o som.
bg.serial_print.description=Envia mensagem pela porta Serial
bg.message.description=Mensagem de texto
bg.glue_sn.description=Junta um n\u00famero ao texto
bg.glue_sb.description=Junta um estado ao texto
bg.glue_poly.description=Junta o caractere a mensagem
bg.wire_write.description=Escreve dado via I2C
bg.wire_read.description=L\u00ea o dado de I2C
bg.wire_isread.description=A \u00faltima leitura do I2C teve sucesso?
bg.sd_write2.description=Escreve no cart\u00e3o SD
bg.code_loop.description=Adiciona um c\u00f3digo diretamente ao loop()
bg.code_head.description=Adiciona um c\u00f3digo diretamente ao head
bg.code_setup.description=Adiciona um c\u00f3digo diretamente ao setup()
bg.glue_msg.description=Junte a uma mensagem de texto
bg.variable_fake.description=Vari\u00e1vel Digital
bg.serial_println.description=Envia mensagem pela porta Serial com nova linha
bg.xcj_motor_forward.description=para frente
bg.xcj_motor_backward.description=Move o cara para tr\u00e1s
bg.xcj_ms_digital_write.description=Grava o sinal digital ao soquete
bg.xcj_ms_digital_read.description=L\u00ea o estado da porta digital














#workshop blocks

#InsectBot blocks


##iDrawing blocks








#





#











#








#legacy support

# littlebits

