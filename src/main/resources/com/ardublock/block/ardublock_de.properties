#X-Generator: crowdin.com
bg.constrain=einschr\u00e4nken
bc.low=unterer
bc.high=h\u00f6herer
bg.sd_write2=auf SD-Karte schreiben
bg.sd_write=SD flash schreiben
bg.sd_write_number=SD schreiben Nummer
bg.sd_write_number_int=SD schreiben Nummer Int
bg.sd_return=Return
bg.sd_no_return=No return
bd.storage=Speicher
bc.device_address=Ger\u00e4teadresse
bc.register_address=Register Adresse
bc.watchdog_enable=erlauben
bc.eeprom_address=Adresse
bc.eeprom_data=Daten
bc.ln=neue Zeile
bc.message=Meldung2


bg.variable_poly=char Variablennamen
bg.char=A
bd.chars=Zeichen-Test
bg.not_equal_poly=\!\=
bg.glue_poly=verbinden
bg.serial_read_poly=Serielles lesen
bc.setup=Setup
bc.par=Eingang
bc.vecsize=Gr\u00f6\u00dfe
bc.num=\#
bg.variable_fake=F\u00e4lschung
bg.fake=F\u00e4lschung
bg.variable_vector=Feldvariablenname
bc.position=Position
bg.create_variable_vector=ein Feld erzeugen

bg.code_head=Kopf
bg.code_setup=Setup
bg.code_loop=Schleife
bg.serial_read=Serielles lesen
bd.especial=Code-Bl\u00f6cke
bg.not_equal_digital=\!\=
bg.glue_msg=Verbinde Nachricht

# BlockDrawer name
bc.angle=Grad
bc.base=Basis
bc.else=sonst
bc.exponent=Exponent
bc.from=von
bc.level=Level
bc.max=max
bc.min=min
bc.microseconds=Mikrosekunden
bc.milliseconds=Millisekunden

# BlockConnector label
bc.pin_number=pin\#
bc.status=Status
bc.test=teste
bc.then=dann
bc.to=bis
bc.value=Wert
bc.variable=Variable
bc.frequency=Frequenz
bc.do=Mache
bc.motor_channel=Motorkanal
bc.motor_speed=Motorgeschwindigkeit


bd.control=Steuerung
bd.number=Variablen/Konstanten
bd.operators=Math. Operatoren
bd.pins=Pins

bd.communication=Kommunikation

#linksprite

# BlockGenus initlabel
bg.abs=Betrag
bg.addition=+
bg.and=und
bg.cos=cos





bg.digital-high=HIGH
bg.digital-low=LOW
bg.digital-off=AUS
bg.digital-on=EIN
bg.division=\u00f7
bg.false=FALSCH
bg.glue_sb=verbinde
bg.glue_sn=verbinde
bg.greater=>
bg.greater_equal=>\=
bg.if=falls
bg.ifelse=falls/sonst
bg.less=<
bg.less_equal=<\=
bg.loop=wiederhole fortlaufend
bg.subroutine=Unterprogramm
bg.subroutine-ref=Unterprogramm
bg.map=zuordnen
bg.max=Max
bg.message=Nachricht
bg.min=min
bg.modulo=%
bg.multiplication=x
bg.not=nicht
bg.not_equal=\!\=
bg.number=1
bg.or=oder
bg.pin-read-analog=Analog pin
bg.pin-read-digital=Digital pin
bg.pin-read-digital-pullup=input pullup
bg.pin-write-analog=setze Analog pin auf
bg.pin-write-digital=Setze digital pin auf
bg.pow=Potenz
bg.random=Zufallszahl
bg.repeat_times=Wiederhole
bg.watchdog_15ms=WDTO_15MS
bg.watchdog_30ms=WDTO_30MS
bg.watchdog_60ms=WDTO_60MS
bg.watchdog_120ms=WDTO_120MS
bg.watchdog_250ms=WDTO_250MS
bg.watchdog_500ms=WDTO_500MS
bg.watchdog_1s=WDTO_1S
bg.watchdog_2s=WDTO_2S
bg.watchdog_4s=WDTO_4S
bg.watchdog_8s=WDTO_8S
bg.watchdog_setup=Laufzeit\u00fcberwachung
bg.watchdog_reset=Laufzeit\u00fcberwachung zur\u00fccksetzen


#linksprite

bg.serial_println=serial println
bg.serial_print=serial print
bg.servo=Servo
bg.setter_variable_digital=digitale Variable setzen
bg.sin=sin
bg.sqrt=Wurzel
bg.subtraction=-
bg.tan=tan
bg.true=WAHR

bg.ultrasonic=Ultraschall
bg.while=solange
bg.wire_isread=I2C lesen OK?
bg.wire_read=von I2C lesen
bg.wire_write=zum I2C schreiben
bg.wire_write_one_byte=I2C schreibe 1
bg.tone=Ton
bg.tone_time=Ton
bg.no_tone=kein Ton
bg.xcj_motor_backward=Motor Shield zur\u00fcck
bg.xcj_motor_forward=Motor Schield vorw\u00e4rts
bg.xcj_ms_digital_read=Xinchejian digitalRead
bg.xcj_ms_digital_write=Xinchejian digitalWrite




ardublock.file.suffix=Ardublock Programmdatei (*.abp)
ardublock.ui.new=Neu
ardublock.ui.save=Speichern
ardublock.ui.saveAs=Speichern als
ardublock.ui.load=\u00d6ffnen
ardublock.ui.upload=Hochladen auf den Arduino
ardublock.ui.clone=klonen
ardublock.ui.add_comment=Kommentar hinzuf\u00fcgen
ardublock.ui.delete_comment=Kommentar l\u00f6schen
ardublock.ui.organize_blocks=Alle Bl\u00f6cke neu anordnen
ardublock.ui.create_refer=Verweis erstellen
ardublock.ui.website=Gehe zur Webseite
ardublock.ui.serialMonitor=Seriellmonitor
ardublock.ui.saveImage=Als Bild speichern...


ardublock.translator.exception.noLoopFound=Keine Schleife gefunden\!
ardublock.translator.exception.multipleLoopFound=mehrere Schleifenbl\u00f6cke gefunden\!
ardublock.translator.exception.subroutineNotDeclared=Unterprogramm nicht deklariert

message.title.error=Fehler
message.title.question=Frage
message.content.open_unsaved=Das Ardublock-Programm hat sich ge\u00e4ndert, m\u00f6chten Sie es speichern?
message.content.overwrite=M\u00f6chten Sie die vorhandene Datei \u00fcberschreiben?
message.file_not_found=Datei wurde nicht gefunden oder der Zugriff wurde verweigert
message.question.newfile_on_workspace_changed=Das Programm hat sich ge\u00e4ndert, m\u00f6chten Sie eine neue Ardublock-Datei erstellen?

bc.repeat_times=Mal

# Descriptions of all Block

bg.loop.description=Hauptprogramm-Schleife ohne setup


bg.subroutine.description=erstellt ein Unterprogramm
bg.subroutine-ref.description=Unterprogramm aufrufen
bg.pin-read-analog.description=Lies den Analogwert von pin
bg.pin-read-digital.description=Liest den Digitalwert von Pin
bg.pin-read-digital-pullup.description=Setzt den digitalen Pin mit einem internen pullup
bg.pin-write-digital.description=Ausgangspegel f\u00fcr digitalen Pin festlegen
bg.pin-write-analog.description=PWM-Ausgang erh\u00e4lt Wert
bg.addition.description=Summe zweier Zahlen
bg.subtraction.description=Differenz zweier Zahlen
bg.multiplication.description=Produkt zweier Zahlen
bg.division.description=Quotient zweier Zahlen
bg.random.description=Generiert eine zuf\u00e4llige Zahl, die kleiner ist als die Zahl
bg.map_common.description=Ordne die Werte von [0, 1023] zu den Werten von [0, 255]
bg.map.description=Ordne Werte vom Bereich "von" zum Bereich "zu"
bg.constrain.description=Beschr\u00e4nke eine Zahl auf einen Bereich
bg.greater.description=Wahr, wenn die erste Zahl gr\u00f6\u00dfer ist als die zweite Zahl
bg.less.description=Wahr, wenn die erste Zahl kleiner ist als die zweite Zahl
bg.equal.description=Wahr, wenn die erste Zahl gleich gro\u00df ist wie die zweite Zahl
bg.equal_digital.description=Wahr, wenn die erste Zahl gleich gro\u00df ist wie die zweite Zahl
bg.greater_equal.description=Wahr, wenn die erste Zahl gr\u00f6\u00dfer als oder gleich gro\u00df ist wie die zweite Zahl
bg.less_equal.description=Wahr, wenn die erste Zahl kleiner als oder gleich gro\u00df ist wie die zweite Zahl
bg.not_equal.description=Wahr, wenn die erste Zahl nicht gleich gro\u00df ist wie die zweite Zahl
bg.not_equal_digital.description=Wahr, wenn die erste Zahl nicht gleich gro\u00df ist wie die zweite Zahl
bg.and.description=Wahr, wenn beide beide Bedingungen erf\u00fcllt sind.
bg.or.description=Wahr, wenn eine oder beide beide Bedingungen erf\u00fcllt sind.
bg.not.description=Das Gegenteil von
bg.equal_poly.description=Wahr, wenn das erstes Zeichen identisch mit dem zweiten Zeichen
bg.not_equal_poly.description=Wahr, wenn das erstes Zeichen nicht identisch mit dem zweiten Zeichen
bg.true.description=Boolescher Wert Richtig
bg.false.description=Boolescher Wert Falsch
bg.setter_variable_digital.description=digitale Variable setzen
bg.servo.description=Einen Servo steuern
bg.ultrasonic.description=Ultraschall Abstandssensor
bg.tone.description=Generiert auf den Pin ein Rechtecksignal mit der angegebenen Frequenz (und 50 % Tastverh\u00e4ltnis).
bg.tone_time.description=Generiert auf den Pin ein Rechtecksignal mit der angegebenen Frequenz (und 50 % Tastverh\u00e4ltnis).
bg.no_tone.description=Beendet die Generierung eines Rechtecksignals das durch tone() ausgel\u00f6st wurde.
bg.serial_print.description=Sendet eine Nachricht \u00fcber die serielle Schnittstelle
bg.message.description=Text-Nachricht
bg.glue_sn.description=Verbindet Zahlen zu einer Zeichenkette
bg.glue_sb.description=Verbindet boolean Werte zu einer Zeichenkette
bg.glue_poly.description=Verbindet Zeichen zu einer Zeichenkette
bg.wire_write.description=Schreiben von Daten \u00fcber I2C
bg.wire_read.description=Liest Daten aus i2c
bg.wire_isread.description=War die letzte Lesung \u00fcber I2C Erfolg erfolgreich?
bg.sd_write2.description=Schreiben auf SD-Karte
bg.code_loop.description=Roh Code zur Loop() hinzuf\u00fcgen
bg.code_head.description=Roh Code zum Kokf hinzuf\u00fcgen
bg.code_setup.description=Roh Code zum Setup() hinzuf\u00fcgen
bg.glue_msg.description=Verbinde eine Text-Nachricht
bg.variable_fake.description=Digital Var
bg.serial_println.description=Sendet eine Nachricht \u00fcber die serielle Schnittstelle mit einem Return
bg.xcj_motor_forward.description=vorw\u00e4rts
bg.xcj_motor_backward.description=r\u00fcckw\u00e4rts
bg.xcj_ms_digital_write.description=Schreibt digitalen Ausgangspegel auf Socket
bg.xcj_ms_digital_read.description=Liest digitalen Ausgangspegel von Socket








bg.random_range.description=Erzeuge Zufallszahl zwischen min und (max - 1)






#workshop blocks

#InsectBot blocks


##iDrawing blocks








#





#











#








#legacy support

# littlebits

