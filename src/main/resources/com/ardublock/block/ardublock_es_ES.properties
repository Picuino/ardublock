#X-Generator: crowdin.com
# a= \u00e1 , e= \u00e9 , i= \u00ed , o= \u00f3 , u= \u00fa ,
bc.start=Inicio
bg.repeat_control=Repetir
bg.repeat_control.description=Repite los comandos con la "variable" que oscila entre los valores "inicio-start-" y "parada -stop-". cambia "variable" incrementandola despu\u00e9s de cada repetici\u00f3n
bc.end=Fin
bc.increment=Pasos
bc.commands=Comandos
bg.constrain=Limitar, restringir...
bc.low=Menor
bc.high=Mayor

bd.storage=Amacenar
bg.eeprom_write_int=Escribir Entero en EEPROM
bg.eeprom_write=Escribir Byte en EEPROM
bg.eeprom_write_long=Escribir Entero largo en EEPROM
bg.eeprom_read_int=Leer Entero de EEPROM
bg.eeprom_read=Leer Byte de EEPROM
bg.eeprom_read_long=Leer Entero largo de EEPROM
bc.device_address=Direcci\u00f3n de dispositivo

bg.sd_write2=Escribe a SD
bg.sd_write=Escribe a SD flash
bg.sd_write_number=Escribe un byte en SD
bg.sd_write_number_int=Escribe un n\u00famero entero en SD
bg.sd_return=Volver
bg.sd_no_return=No Volver

bc.register_address=Direcci\u00f3n de registro
bc.watchdog_enable=Activar
bc.eeprom_address=Direcci\u00f3n
bc.eeprom_data=Dato
bc.ln=Nueva l\u00ednea
bc.print=Imprimir
bc.line_number=L\u00ednea \#
bc.character_number=Car\u00e1cter \#


bd.chars=Test Caracteres
bg.not_equal_poly=\!\=
bg.program=Programa
bc.setup=Configuraci\u00f3n
bc.loop=Bucle
bg.setup=Configuraci\u00f3n
bc.par=Entrada
bc.vecsize=Tama\u00f1o
bc.num=\#
bg.fake=Falso
bg.code_head=Cabecera
bg.code_setup=Configuraci\u00f3n
bg.code_loop=Bucle
bd.especial=C\u00f3digo fuente
bg.not_equal_digital=\!\=
bg.repeat=Repetir
bc.var=Nombre_variable_iteracci\u00f3n
bc.array=Vector

# BlockDrawer name
bc.angle=\u00c1ngulo
bc.base=Base
bc.condition=Prueba
bc.exponent=Exponente
bc.from=De
bc.level=Nivel
bc.max=Max
bc.min=Min
bc.microseconds=Microsegundos
bc.milliseconds=Milisegundos

# BlockConnector label
bc.pin_number=Pin\#
bc.status=Estado
bc.test=Condici\u00f3n
bc.then=Si cumple
bc.else=No cumple
bc.to=A
bc.value=Valor
bc.variable=Variable
bc.frequency=Frecuencia
bc.do=Hacer
bc.motor_channel=Canal motor
bc.motor_speed=Velocidad de motor


bd.control=Control
bd.number=Datos
bd.operators=Matem\u00e1ticas
bd.pins=Pins

bd.communication=Comunicaci\u00f3n


bd.utilities=Hardware gen\u00e9rico

# BlockGenus initlabel
bg.abs=Abs
bg.addition=+
bg.and=And
bg.cos=Cos

bg.delay=Retardo en milisegundos
bg.delay_microseconds=Retardo en microsegundos

bg.digital-high=ALTO
bg.digital-low=BAJO
bg.division=/
bg.false=FALSO
bg.dummy=Vacio
bg.greater=>
bg.greater_equal=>\=
bg.if=Si
bg.ifelse=Si entonces
bg.less=<
bg.less_equal=<\=
bg.loop=Bucle
bg.subroutine=Subrutina
bg.subroutine-ref=Subrutina
bg.subroutine_var=Subrutina_variable
bg.subroutine-ref_var=Subrutina_variable
bg.map=Map
bg.max=Max
bg.message=Texto
bg.variable_millis=Milis
bg.min=Min
bg.modulo=%
bg.multiplication=x
bg.not=No
bg.not_equal=\!\=
bg.number-single-fixed-parallel=Paralelo
bg.or=Or
bg.pin-read-analog=Pin anal\u00f3gico
bg.pin-read-digital=Pin digital
bg.pin-read-digital-pullup=Entrada con pullup
bg.pin-write-analog=Escribe pin anal\u00f3gico
bg.pin-write-digital=Escribe pin digital
bg.pow=Potencia
bg.random=Aleatorio
bg.repeat_times=Repite
bg.watchdog_15ms=WDTO_15MS
bg.watchdog_30ms=WDTO_30MS
bg.watchdog_60ms=WDTO_60MS
bg.watchdog_120ms=WDTO_120MS
bg.watchdog_250ms=WDTO_250MS
bg.watchdog_500ms=WDTO_500MS
bg.watchdog_1s=WDTO_1S
bg.watchdog_2s=WDTO_2S
bg.watchdog_4s=WDTO_4S
bg.watchdog_8s=WDTO_8S
bg.watchdog_setup=Protecci\u00f3n
bg.watchdog_reset=Reset Protecci\u00f3n
bg.random_range=Aleatorio

bg.servo=Servo
bg.servo_prefix=Servo\:
bg.servo_default=Servo
bg.servo_sg90=SG90
bg.servo_mg996r=MG996R
bg.sin=Sen
bg.sqrt=Raiz cuadrada
bg.subtraction=-
bg.tan=Tan
bg.true=CIERTO

bg.ultrasonic=Ultras\u00f3nico
bg.LCD_I2C_Sainsmart_20by4=20by4 I2C Sainsmart
bg.LCD_I2C_Sainsmart_16by2=16by2 I2C Sainsmart
bg.LCD_PLL_Sainsmart_16by2=16by2 PLL Sainsmart
bg.LCD_command_clear=Borrar
bg.LCD_command_home=Inicio
bg.LCD_command_lightOn=Luz On
bg.LCD_command_lightOff=Luz Off
bg.LCD_command_cursorOn=Cursor on
bg.LCD_command_cursorOff=Cursor off
bg.LCD_command_blinkOn=Blink On
bg.LCD_command_blinkOff=Blink Off

bg.while=Mientras
bg.do_while=Mientras
bg.tone=Tono
bg.tone_time=Tono
bg.no_tone=No hay tono

bd.logic=Pruebas

ardublock.file.suffix=Fichero de Ardublock(*.abp)
ardublock.ui.new=Nuevo
ardublock.ui.save=Guardar
ardublock.ui.saveAs=Grabar Como
ardublock.ui.load=Abrir
ardublock.ui.upload=Cargar a Arduino
ardublock.ui.clone=Clonar
ardublock.ui.add_comment=A\u00f1adir comentario
ardublock.ui.delete_comment=Eliminar comentario
ardublock.ui.organize_blocks=Organizar todos los bloques
ardublock.ui.create_refer=Crear referencia
ardublock.ui.website=Ir al Sitio Web
ardublock.ui.serialMonitor=Monitor Puerto Serie
ardublock.ui.saveImage=Guardar imagen...

ardublock.error_msg.digital_var_slot=La variable digital debe tener un nombre 'variable digital'. Consejo\: Mira el lugar 'variable' en el bloque de resaltado
ardublock.error_msg.number_var_slot=Variable est\u00e1ndar debe tener un nombre de variable 'Entero'. Consejo\: Mira el lugar 'variable' en el bloque de resaltado
ardublock.error_msg.long_number_var_slot=Variable entero largo debe tener un nombre de variable 'Entero largo'. Consejo\: Mira el lugar 'variable' en el bloque de resaltado
ardublock.error_msg.double_number_var_slot=Variable debe tener un nombre de variable 'Decimal'. Consejo\: Mira el lugar 'variable' en el bloque de resaltado
ardublock.error_msg.char_var_slot=Variable char debe tomar un caracter como nombre de variable. Consejo\: Mira el lugar 'variable' en el bloque de resaltado
ardublock.error_msg.array_var_slot='Variable Vector' debe tener un nombre 'variable vector'. Consejo\: Mira el lugar 'variable' en el bloque de resaltado
ardublock.error_msg.array_size_slot=\ 'Tama\u00f1o del vector' debe tener un valor entero constante

ardublock.translator.exception.subroutineNameDuplicated=\u00a1Dos o m\u00e1s subrutinas tienen el mismo nombre\!
ardublock.translator.exception.noLoopFound=Ning\u00fan lazo encontrado\!
ardublock.translator.exception.multipleLoopFound=Encontrado bloque con multiples bucles\!
ardublock.translator.exception.socketNull=Falta un valor requerido, nombre de la Variable o 'Test'. Sugerencia\:\: Busque un lugar vac\u00edo en el bloque de resaltado.
ardublock.translator.exception.subroutineNotDeclared=Subrutina no declarado

message.title.error=Error
message.title.question=Pregunta
message.content.open_unsaved=El programa Ardublock ha cambiado, \u00bfdesea guardarlo?
message.content.overwrite=\u00bfDesea sobreescribir el fichero existente?
message.file_not_found=Archivo no encontrado o Permiso denegado
message.question.newfile_on_workspace_changed=El programa ha cambiado, \u00bfquieres crear un nuevo archivo Ardublock?

bc.repeat_times=Veces

# Descriptions of all Block

bg.program.description=Programa principal con bucle y configuraci\u00f3n
bg.loop.description=Loop de programa principal  sin configuraci\u00f3n


bg.delay.description=Retraso indicado en "milisegundos". Nota\: 1000 millis \= 1 segundo
bg.if.description=Ejecuta los comandos si se se cumple la "condici\u00f3n"
bg.ifelse.description=Ejecuta el primer bloque de comandos si la condici\u00f3n se cumple, de lo contrario ejecutar\u00e1 el segundo bloque de comandos.
bg.while.description=Ejecuta los comandos mientras se cumple la "condici\u00f3n"
bg.do_while.description=Ejecuta la lista de comandos. Entonces, si la 'condici\u00f3n' se cumple, se sigue repitiendo hasta que la 'condici\u00f3n' no se cumple
bg.repeat_times.description=Repite los comandos. Parar despu\u00e9s de "n" repeticiones.
bg.subroutine.description=A\u00f1ade una subrutina
bg.subroutine-ref.description=Llama a subrutina
bg.subroutine_variable.description=A\u00f1ade una subrutina con argumento
bg.subroutine-ref_variable.description=Llama a subrutina con argumento
bg.delay_microseconds.description=Retrasa los "microsegundos" indicados.  Nota\: 1000000 micros \= 1 segundo
bg.pin-read-analog.description=Lee el valor anal\u00f3gico de un pin
bg.pin-read-digital.description=Lee el valor digital de un pin
bg.pin-read-digital-pullup.description=Configura un pin digital con resistencia interna pullup
bg.pin-write-digital.description=Escribe en un pin digital
bg.pin-write-analog.description=Escribe en un pin anal\u00f3gico
bg.addition.description=Suma de dos n\u00fameros
bg.subtraction.description=Resta dos n\u00fameros
bg.multiplication.description=Multiplica dos n\u00fameros
bg.division.description=Divide dos n\u00fameros
bg.random.description=Generar un n\u00famero aleatorio menor que el n\u00famero
bg.map_common.description=Mapa de valores de [0,1023] a [0,255]
bg.map.description=Mapa de valores desde la escala  "from" a "to"
bg.constrain.description=Restringir un n\u00famero entre dos valores
bg.greater.description=Verdadero si el primer n\u00famero es mayor que el segundo n\u00famero
bg.less.description=Verdadero si el primer n\u00famero es menor que el segundo n\u00famero
bg.equal.description=Verdadero si el primer n\u00famero es igual al segundo n\u00famero
bg.equal_digital.description=Verdadero si el primer n\u00famero es igual al segundo n\u00famero
bg.greater_equal.description=Verdadero si el primer n\u00famero es mayor o igual que el segundo n\u00famero
bg.less_equal.description=Verdadero si el primer n\u00famero es menor o igual que el segundo n\u00famero
bg.not_equal.description=Verdadero si el primer n\u00famero no es igual al segundo n\u00famero
bg.not_equal_digital.description=Verdadero si el primer n\u00famero no es igual al segundo n\u00famero
bg.and.description=Verdadero si cualquiera de las dos condiciones son verdaderas.
bg.or.description=Verdadero si una o ambas de las dos condiciones son verdaderas.
bg.not.description=Lo opuesto de
bg.equal_poly.description=Verdadero si el primer car\u00e1cter es igual al segundo car\u00e1cter
bg.not_equal_poly.description=Verdadero si el primer car\u00e1cter no es igual al segundo car\u00e1cter
bg.variable_millis.description=Milisegundos desde la \u00faltima puesta en marcha o reset. Nota\: Utilizar una variable de tipo 'Entero largo'.

# DATOS: Variables y constantes
bc.position=Posici\u00f3n

bg.char=A
bg.number=1
bg.number-single=1
bg.number_long=1000000
bg.number_double=3.1415927

bg.char.description=Constante de un car\u00e1cter
bg.number.description=Constante entera est\u00e1ndar. 32.768 a +32,767
bg.number-single.description=Constante entera en formato hexadecimal
bg.number_long.description=Constante entero largo de 0 a 4,294,967,295
bg.number_double.description=Constante decimal, en coma flotante +2.5683 E+11

bg.variable_digital=Nombre_variable_digital
bg.variable_poly=Nombre_variable_caracter
bg.variable_number=Nombre_variable_entero
bg.variable_number_unsigned_long=Nombre_variable_entero_largo
bg.variable_number_double=Nombre_variable_decimal
bg.variable_string=Nombre_variable_texto
bg.variable_String=Nombre_variable_texto
bg.variable_vector=Nombre_variable_vector

bg.variable_number.description=Variable Integer que contiene n\u00fameros enteros de -32,768 a +32,767
bg.variable_digital.description=Variable Bool que contiene una cifra digital de 0 a 1
bg.variable_poly.description=Variable Char que contiene un car\u00e1cter
bg.variable_number_unsigned_long.description=Variable long Integer que contiene n\u00fameros enteros de 0 a 4,294,967,295
bg.variable_number_double.description=Variable float que contiene n\u00fameros decimales
bg.variable_string.description=Variable string que contiene una cadena de texto
bg.variable_String.description=Variable String que contiene una cadena de texto
bg.variable_vector.description=Variable Vector que contiene una lista de n\u00fameros

bg.variable_fake=Nombre_variable_vector
bg.variable_fake.description=Variable Vector. Lista de n\u00famero enteros.

bg.setter_variable_digital=Digital =
bg.setter_variable_char=Caracter =
bg.setter_variable_number=Entero =
bg.setter_variable_number_unsigned_long=Entero_largo =
bg.setter_variable_number_double=N\u00famero_decimal =
bg.setter_variable_vector=Vector =

bg.setter_variable_digital.description=Asigna variable digital de 0 a 1
bg.setter_variable_number.description=Asigna variable de tipo entero de -32,768 a +32,767
bg.setter_variable_char.description=Asigna variable car\u00e1cter con una letra
bg.setter_variable_number_unsigned_long.description=Asigna variable de tipo entero largo de 0 a 4,294,967,295
bg.setter_variable_number_double.description=Asigna variable decimal con n\u00famero en coma flotante +2.5842 E+38
bg.setter_variable_String.description=Asigna variable string con una cadena de texto
bg.setter_variable_vector.description=Asigna variable vector con un n\u00famero entero

bg.create_variable_vector=Crear vector
bg.create_variable_vector.description=Crear un vector de enteros est\u00e1ndar. -32,768 a +32,767

bg.true.description=Cierto Booleano.
bg.false.description=Falso Booleano.
bg.digital-high.description=Valor Alto
bg.digital-low.description=Valor Bajo

# I2C communications
bg.wire_isread=I2C Lectura bi\u00e9n?
bg.wire_read=I2C Leer
bg.wire_write=I2C Escribir
bg.wire_write_one_byte=I2C Escribir dato
bg.wire_write.description=Escribe un dato via I2C en un registro
bg.wire_write_one_byte.description=Escribe un dato via I2C
bg.wire_read.description=Lee un dato de I2C
bg.wire_isread.description=\u00bfSe realiz\u00f3 con \u00e9xito la \u00faltima lectura I2C?
bc.device_address_I2C=Direcci\u00f3n 0x
bg.number-single-I2C-address=3F


bg.servo.description=Control de servo
bg.servo_sg90.description=Controlar un servo SG90
bg.servo_mg996r.description=Controlar un servo MG996R
bg.servo_default.description=Control de servo
bg.ultrasonic.description=Sensor de distancia ultras\u00f3nico
bg.LCD_I2C_Sainsmart_20by4.description=Sainsmart pantalla LCD. I2C. 20 char por 4 l\u00edneas
bg.LCD_I2C_Sainsmart_16by2.description=Sainsmart pantalla LCD. I2C. 20 char por 4 l\u00edneas
bg.LCD_PLL_Sainsmart_16by2.description=Sainsmart pantalla LCD. Paralelo. 16 char por 2 l\u00edneas
bg.LCD_command_clear.description=Limpiar una pantalla LCD
bg.LCD_command_home.description=Pantalla de inicio
bg.LCD_command_lightOn.description=Display LCD "On".
bg.LCD_command_lightOff.description=Display LCD "Off"
bg.LCD_command_cursorOn.description=Cursor de la pantalla LCD "On".
bg.LCD_command_cursorOff.description=Cursor de la pantalla LCD "Off"
bg.LCD_command_blinkOn.description=Parpadeo de pantalla LCD "on"
bg.LCD_command_blinkOff.description=Parpadeo de pantalla LCD "off"
bg.tone.description=Genera en un pin una onda cuadrada de la frecuencia especificada (ciclo de trabajo del 50%).
bg.tone_time.description=Genera en un pin una onda cuadrada de la frecuencia especificada (ciclo de trabajo del 50%).
bg.no_tone.description=Detener la generaci\u00f3n de una onda cuadrada provocada por un tono ().
bg.serial_print.description=Enviar mensaje a trav\u00e9s del puerto serie
bg.message.description=Mensaje de Texto
bg.glue_sn.description=Pegar n\u00famero a un string
bg.glue_sb.description=Pegar boolean a un string
bg.glue_poly.description=Pegar un mensaje de texto
bg.glue_msg.description=Pegar un mensaje de texto
bg.eeprom_read.description=Leer un byte (0-255) de EEPROM. Cada byte consume s\u00f3lo una direcci\u00f3n EEPROM. Utilizando direcciones consecutivas est\u00e1 bien
bg.eeprom_write.description=Escribir un byte (0-255) de EEPROM. Cada byte consume s\u00f3lo una direcci\u00f3n EEPROM. Utilizando direcciones consecutivas est\u00e1 bien
bg.eeprom_read_int.description=Leer un int (+ /-32.767) de EEPROM. Nota\: No leer desde direcciones consecutivas. Cada n\u00famero consume 2 direcciones en EEPROM
bg.eeprom_write_int.description=Escribir un int (+ /-32.767) EEPROM. Nota\: No escriba a direcciones consecutivas. Cada n\u00famero consume 2 direcciones en EEPROM
bg.eeprom_read_long.description=Leer dato tipo 'largo' (0 - 4,294,967,295) de EEPROM. Nota\: No leer desde direcciones consecutivas. Cada n\u00famero consume 4 direcciones en EEPROM
bg.eeprom_write_long.description=Escribir un dato tipo 'largo' (0 - 4,294,967,295) de EEPROM. Nota\: No escriba a direcciones consecutivas. Cada n\u00famero consume 4 direcciones en EEPROM
bg.sd_write2.description=Escribir en tarjeta SD
bg.code_loop.description=A\u00f1adir c\u00f3digo al bloque loop ()
bg.code_head.description=A\u00f1adir c\u00f3digo a la cabecera
bg.code_setup.description=A\u00f1adir c\u00f3digo a la parte setup
bg.serial_println.description=Enviar mensaje y nueva l\u00ednea a trav\u00e9s del puerto serie

bg.random_range.description=Generar un n\u00famero aleatorio entre min y (max -1)

#legacy support
bg.loop1=Bucle
bg.loop1.description=Bucle
bg.loop2=Bucle
bg.loop2.description=Bucle
bg.loop3=Bucle
bg.loop3.description=Bucle

#Picuino
bd.picuino=Panel Picuino
bd.picuino_constants=Constantes Picuino
bc.picuino_key=Bot\u00f3n
bc.picuino_led=Led
bc.picuino_state=Estado
bc.picuino_time_on=Tiempo On
bc.picuino_time_off=Tiempo Off
bc.picuino_event=Evento
bc.picuino_integer=Entero
bc.picuino_position=Posici\u00f3n
bc.picuino_segments=Segmentos
bc.picuino_digit=D\u00edgito
bc.picuino_frequency=Frequencia
bc.picuino_tone=Tono
bc.picuino_time=Tiempo

bg.pc_ledWrite=Escribe Led
bg.pc_ledBlink=Parpadea Led
bg.pc_keyPressed=Pulsador Presionado
bg.pc_keyValue=Valor de Pulsador
bg.pc_keyEvents=Eventos de Pulsador
bg.pc_keyCount=Contador de Pulsador
bg.pc_keyTimeOn=Pulsador: Tiempo On
bg.pc_keyTimeOff=Pulsador: Tiempo Off
bg.pc_dispNum=N\u00famero en display
bg.pc_dispWrite=Escribe en Display
bg.pc_dispWrite4=Escribe x4 en Display
bg.pc_buzzFreq=Frecuencia en Zumbador
bg.pc_buzzTone=Nota en Zumbador
bg.pc_buzzPlay=Partitura en Zumbador
bg.pc_buzzPlayLen=Longitud de Partitura
bg.pc_buzzOn=Zumbador On
bg.pc_buzzOff=Zumbador Off
bg.pc_begin=Iniciar Panel
bg.pc_dispBegin=Iniciar Display
bg.pc_buzzBegin=Iniciar Zumbador
bg.pc_ledBegin=Iniciar Leds
bg.pc_keyBegin=Iniciar Pulsadores

bg.Silence=Silencio
# Picuino End

# Makeblock
bd.makeblock=Makeblock
bc.me_moveTo_number=Mover A
bc.me_motor_number=Motor \#
bc.me_speed_number=Velocidad
bg.me_motor_1=M1
bg.me_motor_1.description=Mi Puerto Base para el Shield Motor DC
bg.me_motor_2=M2
bc.me_port_number=Puerto \#
bg.me_port_1=Puerto 1
bg.me_port_1.description=Mi Puerto Base para el Shield
bg.me_port_2=Puerto 2
bg.me_port_3=Puerto 3
bg.me_port_4=Puerto 4
bg.me_port_5=Puerto 5
bg.me_port_6=Puerto 6
bg.me_port_7=Puerto 7
bg.me_port_8=Puerto 8
bc.me_led_red=Rojo
bc.me_led_green=Verde
bc.me_led_blue=Azul
bg.me_move_mbot=Mover mBot
bg.me_direction=Direcci\u00f3n
bg.me_moveforward_1=Adelante
bg.me_movebackward_2=Atr\u00e1s
bg.me_moveleft_3=Izquierda
bg.me_moveright_4=Derecha
bg.me_ultrasonic_sensor=Distancia por ultrasonidos
bg.me_ultrasonic_sensor.description=Devuelve la distancia entre el Objeto y el Sensor.
bg.me_linefollower=Seguidor de L\u00edneas
bg.me_linefollower.description=Seguidor de l\u00edneas. Devuelve 1=Sensor Derecha, 2=Sensor Izquierda, 3=Sensores Derecha + Izquierda.
bg.me_mbot_switch=Pulsador
bg.me_mbot_tone=Zumbador
bc.me_buzzer_freq=Frequencia
bc.me_buzzer_time=Tiempo
bg.me_mbot_lightsensor=Sensor de luz

bc.me_command_number=Tipo
bc.me_acceleration_number=Acelerador
bc.me_angle_number=\u00c1ngulo
bc.me_input_data=Dato
bc.me_device_number=Dispositivo
bc.me_output_data=Dato
bc.me_stepper_finish=Acabado
bc.me_key_down=Tecla Arriba
bc.me_key_up=Tecla Adelante
bc.me_shutter_state=Acci\u00f3n
bg.me_shutter_1=Disparo On
bg.me_shutter_1.description=Mi acci\u00f3n de cierre
bg.me_shutter_2=Disparo Off
bg.me_shutter_3=Enfoque On
bg.me_shutter_4=Enfoque Off
bg.me_limitswitch.description=Env\u00eda una se\u00f1al al controlador cuando se activa.
bg.me_shutter.description=Env\u00eda una se\u00f1al a la c\u00e1mara r\u00e9flex digital de disparo y enfoque.
bg.me_motordriver.description=Puede utilizar motor M1, M2, Port_1 y Port_2.
bg.me_servodriver.description=Servo puede utilizar Port_1 y Port_2, dispositivo puede utilizar 1 y 2.
bg.me_stepper_motor.description=Controlador de motor paso a paso mini base en A4988.Compatible con 4 y 6 hilos de motores paso a paso.
bg.me_infraredreceiver.description=Recibir datos de Controlador de Infrarrojos
bg.me_bluetooth_read.description=Bluetooth leer un Dato tipo Byte
bg.me_bluetooth_write.description=Bluetooth escribir un Dato tipo Byte
bg.me_bluetooth_commands.description=Analizador de comandos para la comunicaci\u00f3n de aplicaci\u00f3n para Android.
bg.me_bluetooth_command.description=Retorno (0\:m\u00f3dulo, 1\:dispositivo ID, 2\:modo, 3\:puerto, 4\:valor)
# Makeblock End
